import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id "org.jlleitschuh.gradle.ktlint"
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    apply plugin: "kotlin-kapt"
    apply plugin: 'kotlin-android'

    defaultConfig {
        applicationId "com.decagon.android.sq007"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

}

dependencies {
    def lifecycle_version = "2.3.1"
    def nav_version = "2.3.5"
    def recyclerview_version = "1.2.0"
    def material_version = "1.4.0-alpha02"

    // ViewModel
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // recyclerview
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    // material
    implementation "com.google.android.material:material:$material_version"


    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.android.databinding:library:4.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-firestore:22.1.2'
    implementation 'com.google.firebase:firebase-database:19.7.0'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    testImplementation "com.google.truth:truth:1.1.2"

}

task installGitHook(type: Copy) {
    def suffix = "macos"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        suffix = "windows"
    }
    from new File(rootProject.rootDir, "scripts/pre-commit-$suffix")
    into { new File(rootProject.rootDir, '.git/hooks') }
    rename("pre-commit-$suffix", 'pre-commit')
    fileMode 0775

    copy {
        def prePushSuffix = "macos"
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            prePushSuffix = "windows"
        }
        from new File(rootProject.rootDir, "scripts/pre-push-$prePushSuffix")
        into { new File(rootProject.rootDir, '.git/hooks') }
        rename("pre-push-$prePushSuffix", 'pre-push')
        fileMode 0777
    }
}


tasks.getByPath(':app:preBuild').dependsOn installGitHook

